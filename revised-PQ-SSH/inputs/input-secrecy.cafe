ipsgopen INV .
  inv inv1(S:Sys, K':PqSecretK, K2':PqSecretK) .
  inv inv3(S:Sys, K':PqSecretK, C:PqCipher) .
  inv inv4(S:Sys,A:Prin,B:Prin,PK:EcPublicK,PK':PqPublicK,N:Nat) .
  inv inv5(S:Sys,B2:Prin,A:Prin,B:Prin,V:Version,V2:Version,
    CSs:Suites, CSs2:Suites, K:EcSecretK, K':PqSecretK,
    PK2:EcPublicK,C:PqCipher,N:Nat) .
  inv inv6(S:Sys,A:Prin,B:Prin,V:Version,V2:Version,
    CSs:Suites, CSs2:Suites, K:EcSecretK, K':PqSecretK,
    PK2:EcPublicK,C:PqCipher,N:Nat) .
  generate secrecy(S:Sys,B2:Prin,A:Prin,B:Prin,V:Version,V2:Version,
    CSs:Suites, CSs2:Suites, K:EcSecretK, K':PqSecretK,
    PK2:EcPublicK,C:PqCipher,SIGN:Data,N:Nat,N2:Nat)
  induction on S:Sys .
close
set-output revised-PQ-SSH/secrecy.cafe .
:save-proof .

eof

load revised-PQ-SSH/pqssh.cafe .
load revised-PQ-SSH/invariants.cafe .
load revised-PQ-SSH/inputs/input-secrecy.cafe .
